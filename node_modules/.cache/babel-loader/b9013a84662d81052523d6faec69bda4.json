{"ast":null,"code":"const FACTS_API_DOMAIN = \"https://retoolapi.dev/tpsndH/doctorwhofacts/\";\nconst options = {\n  method: \"GET\",\n  headers: {\n    \"X-RapidAPI-Key\": \"5d5c7b1ac4mshb4312c68edd1af7p102104jsn812147ae910d\",\n    \"X-RapidAPI-Host\": \"bing-image-search1.p.rapidapi.com\"\n  }\n};\nexport const getRandomFact = async () => {\n  let randomPos = Math.floor(Math.random() * 99) + 1;\n  const response2 = await fetch(\"https://bing-image-search1.p.rapidapi.com/images/search?q=tardis\", options);\n  const data2 = response2.json();\n  const img = data2.value[randomPos].contentUrl;\n  let randomId = Math.floor(Math.random() * 53) + 1;\n  const response = await fetch(FACTS_API_DOMAIN + randomId);\n  const data = await response.json();\n\n  if (!response2.ok) {\n    throw new Error(data2.message || \"Could not fetch fact.\");\n  }\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not fetch fact.\");\n  }\n\n  const fact = {\n    image: img,\n    id: data.id,\n    title: data.title,\n    text: data.text\n  };\n  return fact;\n};","map":{"version":3,"names":["FACTS_API_DOMAIN","options","method","headers","getRandomFact","randomPos","Math","floor","random","response2","fetch","data2","json","img","value","contentUrl","randomId","response","data","ok","Error","message","fact","image","id","title","text"],"sources":["C:/Users/itaim/WikiWho/src/lib/api.js"],"sourcesContent":["const FACTS_API_DOMAIN = \"https://retoolapi.dev/tpsndH/doctorwhofacts/\";\r\n\r\nconst options = {\r\n  method: \"GET\",\r\n  headers: {\r\n    \"X-RapidAPI-Key\": \"5d5c7b1ac4mshb4312c68edd1af7p102104jsn812147ae910d\",\r\n    \"X-RapidAPI-Host\": \"bing-image-search1.p.rapidapi.com\",\r\n  },\r\n};\r\n\r\nexport const getRandomFact = async () => {\r\n  let randomPos = Math.floor(Math.random() * 99) + 1;\r\n\r\n  const response2 = await fetch(\r\n    \"https://bing-image-search1.p.rapidapi.com/images/search?q=tardis\",\r\n    options\r\n  );\r\n  const data2 = response2.json();\r\n  const img = data2.value[randomPos].contentUrl;\r\n  let randomId = Math.floor(Math.random() * 53) + 1;\r\n  const response = await fetch(FACTS_API_DOMAIN + randomId);\r\n  const data = await response.json();\r\n\r\n  if (!response2.ok) {\r\n    throw new Error(data2.message || \"Could not fetch fact.\");\r\n  }\r\n  if (!response.ok) {\r\n    throw new Error(data.message || \"Could not fetch fact.\");\r\n  }\r\n  const fact = {\r\n    image: img,\r\n    id: data.id,\r\n    title: data.title,\r\n    text: data.text,\r\n  };\r\n  return fact;\r\n};\r\n"],"mappings":"AAAA,MAAMA,gBAAgB,GAAG,8CAAzB;AAEA,MAAMC,OAAO,GAAG;EACdC,MAAM,EAAE,KADM;EAEdC,OAAO,EAAE;IACP,kBAAkB,oDADX;IAEP,mBAAmB;EAFZ;AAFK,CAAhB;AAQA,OAAO,MAAMC,aAAa,GAAG,YAAY;EACvC,IAAIC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,IAAiC,CAAjD;EAEA,MAAMC,SAAS,GAAG,MAAMC,KAAK,CAC3B,kEAD2B,EAE3BT,OAF2B,CAA7B;EAIA,MAAMU,KAAK,GAAGF,SAAS,CAACG,IAAV,EAAd;EACA,MAAMC,GAAG,GAAGF,KAAK,CAACG,KAAN,CAAYT,SAAZ,EAAuBU,UAAnC;EACA,IAAIC,QAAQ,GAAGV,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,IAAiC,CAAhD;EACA,MAAMS,QAAQ,GAAG,MAAMP,KAAK,CAACV,gBAAgB,GAAGgB,QAApB,CAA5B;EACA,MAAME,IAAI,GAAG,MAAMD,QAAQ,CAACL,IAAT,EAAnB;;EAEA,IAAI,CAACH,SAAS,CAACU,EAAf,EAAmB;IACjB,MAAM,IAAIC,KAAJ,CAAUT,KAAK,CAACU,OAAN,IAAiB,uBAA3B,CAAN;EACD;;EACD,IAAI,CAACJ,QAAQ,CAACE,EAAd,EAAkB;IAChB,MAAM,IAAIC,KAAJ,CAAUF,IAAI,CAACG,OAAL,IAAgB,uBAA1B,CAAN;EACD;;EACD,MAAMC,IAAI,GAAG;IACXC,KAAK,EAAEV,GADI;IAEXW,EAAE,EAAEN,IAAI,CAACM,EAFE;IAGXC,KAAK,EAAEP,IAAI,CAACO,KAHD;IAIXC,IAAI,EAAER,IAAI,CAACQ;EAJA,CAAb;EAMA,OAAOJ,IAAP;AACD,CA1BM"},"metadata":{},"sourceType":"module"}