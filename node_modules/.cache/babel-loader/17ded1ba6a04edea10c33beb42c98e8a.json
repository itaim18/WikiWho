{"ast":null,"code":"const FACTS_API_DOMAIN = \"https://retoolapi.dev/tpsndH/doctorwhofacts/\";\nconst TARDIS_API_DOMAIN = \"https://serpapi.com/search.json?q=tardis&tbm=isch&ijn=0&api_key=463d599531ccb918fd213d24256a015b98048c5f2fb2a1a965c4e4196325a7d2\";\nexport const getRandomImage = async () => {\n  let randomPos = Math.floor(Math.random() * 99) + 1;\n  const response = await fetch(TARDIS_API_DOMAIN);\n  const data = await response.json();\n  const thumbnail = data.images_results[randomPos].thumbnail;\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not fetch fact.\");\n  }\n\n  return thumbnail;\n};\nexport const getRandomFact = async () => {\n  let randomId = Math.floor(Math.random() * 53) + 1;\n  const response = await fetch(FACTS_API_DOMAIN + randomId);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not fetch fact.\");\n  }\n\n  const fact = {\n    id: data.id,\n    title: data.title,\n    text: data.text\n  };\n  return fact;\n};","map":{"version":3,"names":["FACTS_API_DOMAIN","TARDIS_API_DOMAIN","getRandomImage","randomPos","Math","floor","random","response","fetch","data","json","thumbnail","images_results","ok","Error","message","getRandomFact","randomId","fact","id","title","text"],"sources":["C:/Users/itaim/WikiWho/src/lib/api.js"],"sourcesContent":["const FACTS_API_DOMAIN = \"https://retoolapi.dev/tpsndH/doctorwhofacts/\";\r\n\r\nconst TARDIS_API_DOMAIN =\r\n  \"https://serpapi.com/search.json?q=tardis&tbm=isch&ijn=0&api_key=463d599531ccb918fd213d24256a015b98048c5f2fb2a1a965c4e4196325a7d2\";\r\nexport const getRandomImage = async () => {\r\n  let randomPos = Math.floor(Math.random() * 99) + 1;\r\n  const response = await fetch(TARDIS_API_DOMAIN);\r\n  const data = await response.json();\r\n  const thumbnail = data.images_results[randomPos].thumbnail;\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.message || \"Could not fetch fact.\");\r\n  }\r\n  return thumbnail;\r\n};\r\n\r\nexport const getRandomFact = async () => {\r\n  let randomId = Math.floor(Math.random() * 53) + 1;\r\n  const response = await fetch(FACTS_API_DOMAIN + randomId);\r\n  const data = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.message || \"Could not fetch fact.\");\r\n  }\r\n  const fact = {\r\n    id: data.id,\r\n    title: data.title,\r\n    text: data.text,\r\n  };\r\n  return fact;\r\n};\r\n"],"mappings":"AAAA,MAAMA,gBAAgB,GAAG,8CAAzB;AAEA,MAAMC,iBAAiB,GACrB,kIADF;AAEA,OAAO,MAAMC,cAAc,GAAG,YAAY;EACxC,IAAIC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,IAAiC,CAAjD;EACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACP,iBAAD,CAA5B;EACA,MAAMQ,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;EACA,MAAMC,SAAS,GAAGF,IAAI,CAACG,cAAL,CAAoBT,SAApB,EAA+BQ,SAAjD;;EAEA,IAAI,CAACJ,QAAQ,CAACM,EAAd,EAAkB;IAChB,MAAM,IAAIC,KAAJ,CAAUL,IAAI,CAACM,OAAL,IAAgB,uBAA1B,CAAN;EACD;;EACD,OAAOJ,SAAP;AACD,CAVM;AAYP,OAAO,MAAMK,aAAa,GAAG,YAAY;EACvC,IAAIC,QAAQ,GAAGb,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,IAAiC,CAAhD;EACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACR,gBAAgB,GAAGiB,QAApB,CAA5B;EACA,MAAMR,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;EAEA,IAAI,CAACH,QAAQ,CAACM,EAAd,EAAkB;IAChB,MAAM,IAAIC,KAAJ,CAAUL,IAAI,CAACM,OAAL,IAAgB,uBAA1B,CAAN;EACD;;EACD,MAAMG,IAAI,GAAG;IACXC,EAAE,EAAEV,IAAI,CAACU,EADE;IAEXC,KAAK,EAAEX,IAAI,CAACW,KAFD;IAGXC,IAAI,EAAEZ,IAAI,CAACY;EAHA,CAAb;EAKA,OAAOH,IAAP;AACD,CAdM"},"metadata":{},"sourceType":"module"}